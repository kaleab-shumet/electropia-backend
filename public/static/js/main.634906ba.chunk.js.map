{"version":3,"sources":["Utils/utils.js","Utils/api.js","redux/actions/productActions.js","redux/actions/catagoryActions.js","redux/actions/userAction.js","Components/NavbarComponent/NavbarComponent.js","Components/Product/Product.js","Components/ProgressBar/ProgressBar.js","routes/Home/Home.js","routes/ProductPage/index.js","redux/selectors/selector.js","routes/signin/signin.js","routes/signup/signup.js","Components/CartItem/CartItem.js","routes/Cart/Cart.js","routes/About/About.js","App.js","serviceWorker.js","redux/reducers/ProductsReducer.js","redux/reducers/CatagoryReducer.js","redux/reducers/UserReducer.js","redux/store/store.js","index.js"],"names":["setAccessToken","accessToken","localStorage","setItem","api","axios","create","baseURL","headers","getItem","setProduct","newProduct","type","setCatagory","newCatagory","setUser","newUser","setCart","newCart","connect","state","products","catagories","user","props","act","q","query","catagory","useState","activeTab","setActiveTab","search","setSearch","setResponseError","console","log","history","useHistory","resetHome","get","then","response","dispatch","data","handlePageCount","totalpages","catch","error","useEffect","onNavLinkClick","e","target","id","catobject","requestUrl","mainUrl","urlQ","qs","stringify","buildUrl","push","className","name","placeholder","onChange","value","onClick","to","class","preventDefault","encodedResult","cart","length","removeItem","window","location","href","displayHorizontalNav","map","_id","key","makeid","result","characters","charactersLength","i","charAt","Math","floor","random","Product","rating","a","src","image","alt","title","price","ProgressBar","pageCount","setPageCount","currentPage","setCurrentPage","parse","NAVBAR","count","handlePageClick","selected","page","newQuery","modifiedUrl","loadProducts","productsUrl","message","onCreate","constructor","Array","p","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","forcePage","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","productId","match","params","filtered","filter","prod","getProductById","selectedProduct","setSelectedProduct","productError","setProductError","isLoggedIn","setLogIn","handleAddToCart","product","clickedBtn","disabled","post","finally","mUrl","incommingProducts","Error","searchOnDb","description","ReactHtmlParser","decodeURIComponent","Signin","responseError","formData","setFormData","setFormDataImmutable","newFormData","onSubmit","resp","htmlFor","Signup","index","delete","productData","checkAndUpdateState","getProductAndUpdate","cartItem","About","App","path","component","ProductPage","Cart","Home","Boolean","hostname","productReducer","action","catagoryReducer","userReducer","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","getState","subscribe","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.634906ba.chunk.js","sourcesContent":["const ELECTROPIA_AUTHORIZATION_KEY = 'ELECTROPIA_AUTHORIZATION_KEY_3489534'\r\n\r\nconst getAccessToken = () => {\r\n    return localStorage.getItem(ELECTROPIA_AUTHORIZATION_KEY)\r\n}\r\n\r\nconst setAccessToken = (accessToken) => {\r\n    return localStorage.setItem(ELECTROPIA_AUTHORIZATION_KEY, accessToken);\r\n}\r\n\r\nconst removeAccessToken = () => {\r\n    return localStorage.removeItem(ELECTROPIA_AUTHORIZATION_KEY);\r\n}\r\n\r\nexport {\r\n    getAccessToken,\r\n    setAccessToken,\r\n    removeAccessToken\r\n}","import axios from 'axios'\r\nimport { getAccessToken } from './utils'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3000',\r\n    headers: {\r\n        'Authorization': getAccessToken()\r\n    }\r\n})\r\n\r\n\r\nexport default api;","const setProduct = (newProduct) => {\r\n    return {\r\n        type: 'SET_PRODUCT',\r\n        newProduct\r\n    }\r\n}\r\n\r\nexport {\r\n\r\n    setProduct\r\n\r\n}","const setCatagory = (newCatagory) => {\r\n    return {\r\n        type: 'SET_CATAGORY',\r\n        newCatagory\r\n    }\r\n}\r\n\r\nexport {\r\n\r\n    setCatagory\r\n\r\n}","const setUser = (newUser) => {\r\n    return {\r\n        type: 'SET_USER',\r\n        newUser\r\n    }\r\n}\r\n\r\nconst setCart = (newCart) => {\r\n    return {\r\n        type: 'SET_CART',\r\n        newCart\r\n    }\r\n}\r\n\r\nexport {\r\n    setUser,\r\n    setCart\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport api from '../../Utils/api'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport qs from 'query-string'\r\nimport { setProduct } from '../../redux/actions/productActions'\r\nimport { useState } from 'react'\r\nimport { removeAccessToken } from '../../Utils/utils'\r\nimport { setCatagory } from '../../redux/actions/catagoryActions'\r\nimport { setUser } from '../../redux/actions/userAction'\r\n\r\n\r\n\r\nfunction NavbarComponent(props) {\r\n    let act = ''\r\n    const q = props.query\r\n    if (q) {\r\n        act = q.catagory\r\n    }\r\n    const [activeTab, setActiveTab] = useState(act)\r\n    const [search, setSearch] = useState()\r\n    const [respError, setResponseError] = useState()\r\n\r\n    console.log('onNavLinkClick', props);\r\n    const history = useHistory();\r\n\r\n    function onSignOutClicked(e) {\r\n        e.preventDefault()\r\n        removeAccessToken()\r\n        window.location = '/'\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (q) {\r\n            if (q.search) {\r\n                setSearch(q.search)\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    function onSearchClicked(e) {\r\n        e.preventDefault();\r\n\r\n        setActiveTab()\r\n        props.dispatch(setProduct('Loading'))\r\n        const encodedResult = qs.stringify({ search })\r\n        history.push(`/?${encodedResult}`)\r\n        console.log('onSearchClicked', encodedResult);\r\n        api.get(`/api?${encodedResult}`)\r\n            .then(response => {\r\n                console.log('search resp',response.data);\r\n                props.dispatch(setProduct(response.data.products))\r\n                props.dispatch(setCatagory(response.data.catagories))\r\n                props.dispatch(setUser(response.data.user))\r\n            })\r\n            .catch(error => {\r\n                console.log('search error',error);\r\n            })\r\n    }\r\n\r\n\r\n    function resetHome() {\r\n        setActiveTab()\r\n        setSearch('')\r\n        api.get('/api')\r\n            .then(response => {\r\n                props.dispatch(setProduct(response.data.products))\r\n                props.dispatch(setCatagory(response.data.catagories))\r\n                props.dispatch(setUser(response.data.user))\r\n                props.handlePageCount(response.data.totalpages)\r\n\r\n            })\r\n            .catch((error) => { })\r\n    }\r\n\r\n    const onNavLinkClick = (e) => {\r\n\r\n        const catagory = e.target.id;\r\n        setSearch()\r\n        setActiveTab(catagory)\r\n        console.log('activetab', catagory);\r\n        props.dispatch(setProduct('Loading'))\r\n\r\n\r\n\r\n        const mainLink = '/api'\r\n\r\n        const catobject = { catagory };\r\n        const requestUrl = buildUrl(mainLink, catobject)\r\n\r\n\r\n\r\n        history.push(`/?${qs.stringify(catobject)}`)\r\n\r\n\r\n\r\n\r\n        api.get(requestUrl)\r\n            .then(response => {\r\n                props.dispatch(setProduct(response.data.products))\r\n                props.handlePageCount(response.data.totalpages)\r\n\r\n            })\r\n            .catch((error) => {\r\n                setResponseError(error)\r\n            })\r\n\r\n\r\n    }\r\n    console.log('props_log', props);\r\n\r\n    return (\r\n        <nav className='nav-container'>\r\n            <div className='header-nav'>\r\n\r\n                <div className='header-nav-brand'>\r\n                    <h1> ELECTROPIA </h1>\r\n                </div>\r\n\r\n                <div className='header-nav__search'>\r\n                    <form>\r\n                        <div className='header-nav__div'>\r\n\r\n                            <input type='text' name='search' placeholder='Search Item' onChange={(e) => setSearch(e.target.value)} value={search} />\r\n                            <button className='clear-btn' onClick={resetHome}><NavLink to=\"/\" onClick={resetHome}><span class=\"fas fa-times\"></span></NavLink></button>\r\n                            <button className='search-btn' onClick={onSearchClicked}><i className=\"fas fa-search\"></i></button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className='header-nav__links'>\r\n                    {props.user.cart && <p>Hello {props.user.name}! </p>}\r\n                    <NavLink to=\"/\" onClick={resetHome}>Home</NavLink>\r\n                    <NavLink to=\"/cart\">Cart <i className=\"fas fa-shopping-cart\"></i>{props.user.cart && <span className='cart-num'>({props.user.cart.length})</span>}</NavLink>\r\n                    {!props.user.cart ? <NavLink to=\"/signin\">Sign In</NavLink> : <a onClick={onSignOutClicked} href='/'>Sign Out</a>}\r\n                    {/* <NavLink to=\"/about\">About</NavLink> */}\r\n                </div>\r\n            </div>\r\n            { props.displayHorizontalNav &&\r\n                (<div className='horizontal-scrollable-contaner'>\r\n\r\n                    <ul className='horizontal-nav'>\r\n                        {props.catagories.map(catagory => {\r\n\r\n                            console.log('activetab', { catagory, activeTab });\r\n                            if (catagory._id === activeTab) {\r\n\r\n                                return <li className='horizontal-nav-active' key={catagory._id} id={catagory._id} onClick={onNavLinkClick}>{catagory.name}</li>\r\n\r\n                            }\r\n                            else return <li className='horizontal-nav-inactive-li' key={catagory._id} id={catagory._id} onClick={onNavLinkClick}>{catagory.name}</li>\r\n\r\n                        })}\r\n                    </ul>\r\n\r\n                </div>)\r\n            }\r\n        </nav>\r\n    )\r\n\r\n    function buildUrl(mainUrl, urlQ = {}) {\r\n        if (qs.stringify(urlQ) === '') {\r\n            return mainUrl\r\n        }\r\n        else return mainUrl + '?' + qs.stringify(urlQ)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { products: state.products, catagories: state.catagories, user: state.user }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarComponent)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Product.css'\r\n\r\n\r\nfunction Product(props) {\r\n    const rating = []\r\n    \r\n    for(let a =0; a < 5; a++){\r\n        if(a < props.rating){\r\n        rating.push(<span key={makeid(10)} className=\"fa fa-star checked\"></span>)\r\n        }\r\n        else{\r\n            rating.push(<span key={makeid(10)} className=\"fa fa-star\"></span>)        \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='product'>\r\n\r\n            <img src={props.image} alt=\"\" />\r\n            <h5><Link to={`/product/${props._id}`}>{props.title}</Link></h5>\r\n            <p>Price: {props.price} ETB</p>\r\n            <div>\r\n                {\r\n                    rating\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction makeid(length) {\r\n    let result           = '';\r\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n }\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport './progressbar.css'\r\n\r\nfunction ProgressBar() {\r\n    return (\r\n        <div className='progrss-bar-container'>\r\n            <div className='lds-dual-ring'>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar\r\n","import React from 'react';\r\nimport './Home.css'\r\nimport NavbarComponent from './../../Components/NavbarComponent/NavbarComponent'\r\nimport Product from '../../Components/Product/Product';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { setProduct } from '../../redux/actions/productActions';\r\nimport { setCatagory } from '../../redux/actions/catagoryActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport qs from 'query-string'\r\nimport ReactPaginate from 'react-paginate'\r\nimport api from '../../Utils/api';\r\nimport { setUser } from '../../redux/actions/userAction';\r\nimport ProgressBar from '../../Components/ProgressBar/ProgressBar'\r\n\r\nconst Home = (props) => {\r\n\r\n    const mainLink = '/api'\r\n    const [pageCount, setPageCount] = useState(1)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const history = useHistory();\r\n    let q = qs.parse(props.location.search);\r\n\r\n    const NAVBAR = (<NavbarComponent handlePageCount={handlePageCount} query={q} displayHorizontalNav={true} />)\r\n\r\n    function onCreate() {\r\n        if (q.page) {\r\n            setCurrentPage(q.page - 1)\r\n        }\r\n        const modifiedUrl = buildUrl(mainLink, q)\r\n        console.log({ modifiedUrl });\r\n        loadProducts(modifiedUrl)\r\n    }\r\n\r\n    function getActiveView() {\r\n        if (props.products) {\r\n            if (props.products.constructor === Array) {\r\n                if (props.products.length > 0) {\r\n                    return (\r\n                        <div>\r\n                            {NAVBAR}\r\n                            <div className='wrapper'>\r\n                                <div className='main-container'>\r\n                                    {/* <div className='sidebar'>\r\n                                <ul className='sidebar-list'>\r\n                                    <li>abebe</li>\r\n                                    <li>abebe</li>\r\n                                    <li>abebe</li>\r\n                                    <li>abebe</li>\r\n                                    <li>abebe</li>\r\n                                    <li>abebe</li>\r\n                                    <li>abebe</li>\r\n                                </ul>\r\n                            </div> */}\r\n\r\n                                    <div className='main-area'>\r\n                                        <div className='products-container'>\r\n\r\n                                            {\r\n                                                props.products.map((p, i) => {\r\n\r\n                                                    return <Product key={i}  {...p} />\r\n                                                })\r\n                                            }\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className='pagination-container'>\r\n                                {pageCount > 1 && (<ReactPaginate\r\n                                    previousLabel={\"<\"}\r\n                                    nextLabel={\">\"}\r\n                                    breakLabel={\"...\"}\r\n                                    breakClassName={\"break-me\"}\r\n                                    pageCount={pageCount}\r\n                                    marginPagesDisplayed={0}\r\n                                    forcePage={currentPage}\r\n\r\n                                    pageRangeDisplayed={5}\r\n                                    onPageChange={handlePageClick}\r\n                                    containerClassName={\"pagination\"}\r\n                                    subContainerClassName={\"pages pagination\"}\r\n                                    activeClassName={\"active\"} />)}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <>\r\n                            <NavbarComponent />\r\n                            <h3 class='not-found'>Item not found</h3>\r\n                        </>\r\n                    )\r\n\r\n                }\r\n            }\r\n            else {\r\n\r\n                return (\r\n                    <div>\r\n                        {NAVBAR}\r\n                        <ProgressBar />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <NavbarComponent />\r\n                    <p>Error Occured!</p>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        onCreate()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function handlePageClick(e) {\r\n\r\n        setCurrentPage(e.selected)\r\n        const page = e.selected + 1;\r\n\r\n        props.dispatch(setProduct('Loading'))\r\n\r\n\r\n        const q = qs.parse(props.location.search);\r\n\r\n\r\n\r\n        const newQuery = {\r\n            ...q, page\r\n        }\r\n\r\n        const modifiedUrl = buildUrl(mainLink, newQuery)\r\n        history.push(`/?${qs.stringify(newQuery)}`)\r\n        loadProducts(modifiedUrl)\r\n    }\r\n\r\n    function loadProducts(productsUrl) {\r\n        api.get(productsUrl)\r\n            .then(response => {\r\n\r\n                props.dispatch(setProduct(response.data.products));\r\n                props.dispatch(setCatagory(response.data.catagories))\r\n                props.dispatch(setUser(response.data.user))\r\n\r\n                setPageCount(response.data.totalpages)\r\n\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n\r\n                console.log('error', error.message);\r\n\r\n            })\r\n\r\n    }\r\n\r\n    function handlePageCount(count) {\r\n        setPageCount(count)\r\n\r\n        console.log('setCurrentPage', currentPage);\r\n        setCurrentPage(0)\r\n\r\n    }\r\n\r\n    function buildUrl(mainUrl, urlQ = {}) {\r\n        if (qs.stringify(urlQ) === '') {\r\n            return mainUrl\r\n        }\r\n        else return mainUrl + '?' + qs.stringify(urlQ)\r\n    }\r\n    return getActiveView();\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    return { products: state.products };\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Home);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getProductById } from '../../redux/selectors/selector';\r\nimport NavbarComponent from './../../Components/NavbarComponent/NavbarComponent'\r\nimport './productpage.css'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport api from '../../Utils/api'\r\nimport { useState } from 'react'\r\nimport { setUser, setCart } from '../../redux/actions/userAction';\r\nimport { setProduct } from '../../redux/actions/productActions';\r\nimport ProgressBar from '../../Components/ProgressBar/ProgressBar'\r\n\r\nfunction ProductPage(props) {\r\n\r\n\r\n    const productId = props.match.params.productId;\r\n\r\n    const [selectedProduct, setSelectedProduct] = useState(getProductById(productId, props.products))\r\n    const [productError, setProductError] = useState();\r\n    const [isLoggedIn, setLogIn] = useState(props.user.name)\r\n\r\n    if (!selectedProduct) {\r\n        searchOnDb(productId)\r\n    }\r\n\r\n\r\n    function getActiveView() {\r\n        if (selectedProduct) {\r\n            return (\r\n\r\n                <div>\r\n                    <NavbarComponent />\r\n                    <div className='product-main'>\r\n                        <img className='product-main-img' src={selectedProduct.image} alt='' />\r\n                        <h4 className='product-main-h4'>{selectedProduct.title}</h4>\r\n                        <h5>{selectedProduct.price}</h5>\r\n                        <div>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                        </div>\r\n                        <button className='product-main-button' id={selectedProduct._id} onClick={handleAddToCart} disabled={!isLoggedIn}>{isLoggedIn ? <>ADD TO CART</> : <>You should log in</>} </button>\r\n                        {selectedProduct.description && <h5>Description</h5>}\r\n                        <div className='description'>\r\n                            {ReactHtmlParser(decodeURIComponent(selectedProduct.description))}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n        else {\r\n            if (productError) {\r\n                return <>\r\n                    <NavbarComponent />\r\n                    <h3 className='notfound'>NOT FOUND</h3>\r\n                </>\r\n            }\r\n            return <>\r\n                <NavbarComponent />\r\n                <ProgressBar />\r\n            </>\r\n        }\r\n    }\r\n\r\n    function handleAddToCart(e) {\r\n        const product = e.target.id;\r\n        const clickedBtn = e.target;\r\n        clickedBtn.disabled = true;\r\n        console.log({ product });\r\n        api.post('/api/cart', { product })\r\n            .then(newCart => {\r\n                props.dispatch(setCart(newCart.data))\r\n\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n            .finally(() => {\r\n                clickedBtn.disabled = false;\r\n            })\r\n    }\r\n\r\n\r\n\r\n    function searchOnDb(id) {\r\n        const mUrl = `/api?product=${id}`\r\n        api.get(mUrl)\r\n            .then(response => {\r\n                console.log('search response', response.data.user);\r\n                if (response.data.products) {\r\n                    const incommingProducts = response.data.products;\r\n\r\n                    if (incommingProducts.length > 0) {\r\n                        console.log({ incommingProducts });\r\n                        setSelectedProduct(incommingProducts[0])\r\n                        props.dispatch(setUser(response.data.user))\r\n                        props.dispatch(setProduct(response.data.products))\r\n                        setLogIn(response.data.user.name)\r\n                        setProductError({})\r\n                    }\r\n                    else\r\n                        throw new Error('No Product found!')\r\n                }\r\n                throw new Error('Empty products')\r\n            })\r\n            .catch(error => {\r\n                setProductError(error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    return getActiveView()\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ products: state.products, catagories: state.catagories, user: state.user })\r\n\r\nexport default connect(mapStateToProps)(ProductPage);\r\n","\r\n\r\nconst getProductById = (id, products = []) => {\r\n\r\n    console.log('getProductById', products);\r\n    const filtered = products.filter((prod) => {\r\n        return prod._id === id;\r\n    })\r\n    if(filtered){\r\n        return filtered[0]\r\n    }\r\n    return undefined\r\n}\r\n\r\nexport {\r\n    getProductById\r\n};","import React, { useState } from 'react'\r\nimport './signin.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { setAccessToken } from '../../Utils/utils'\r\nimport api from '../../Utils/api'\r\n\r\n\r\n\r\n\r\nfunction Signin() {\r\n\r\n    const [responseError, setResponseError] = useState()\r\n    const [formData, setFormData] = useState({})\r\n\r\n    function setFormDataImmutable(e) {\r\n\r\n        const newFormData = {}\r\n        newFormData[e.target.name] = e.target.value\r\n        return setFormData({\r\n            ...formData,\r\n            ...newFormData\r\n        })\r\n    }\r\n\r\n    function handleFormSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('handleFormSubmit', formData);\r\n        const signinurl = '/api/user/signin'\r\n        api.post(signinurl, formData)\r\n            .then(resp => {\r\n\r\n                const { accessToken } = resp.data \r\n                setAccessToken(`Bearer ${accessToken}`)\r\n                window.location = '/'\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setResponseError(error.message)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='signin'>\r\n\r\n            <div className='form-container'>\r\n\r\n                <div className='signin-container-header'>\r\n                    <h3>ELECTROPIA</h3>\r\n                </div>\r\n                <div className='signin-container-signin'>\r\n                    <h3>Sign In</h3>\r\n                    {responseError && <h5 className='signin-container-error'>{responseError}</h5>}\r\n                </div>\r\n\r\n\r\n\r\n                <form className='signin-form' onSubmit={handleFormSubmit}>\r\n                    <div className='signin-form-part'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input className='signin-form-text-input' name='email' onChange={setFormDataImmutable}></input>\r\n                    </div>\r\n\r\n                    <div className='signin-form-part'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input className='signin-form-text-input' name='password' onChange={setFormDataImmutable} />\r\n                    </div>\r\n\r\n                    <div className='signin-form-part'>\r\n                        <button>Log In</button>\r\n                    </div>\r\n\r\n                    <div className='signin-form-part'>\r\n                        <p>Don't you have an account ? <br></br>Please click <Link to='/signup'>Sign Up</Link>.</p>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React, { useState } from 'react'\r\nimport './signup.css'\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../../Utils/api'\r\nimport { setAccessToken } from '../../Utils/utils'\r\n\r\nfunction Signup() {\r\n\r\n    const [responseError, setResponseError] = useState()\r\n    const [formData, setFormData] = useState({})\r\n\r\n    function setFormDataImmutable(e) {\r\n\r\n        const newFormData = {}\r\n        newFormData[e.target.name] = e.target.value\r\n        return setFormData({\r\n            ...formData,\r\n            ...newFormData\r\n        })\r\n    }\r\n\r\n    function handleFormSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('handleFormSubmit', formData);\r\n        const signinurl = '/api/user/signup'\r\n        api.post(signinurl, formData)\r\n            .then(resp => {\r\n\r\n                const { accessToken } = resp.data\r\n                setAccessToken(`Bearer ${accessToken}`)\r\n                window.location = '/'\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setResponseError(error.message)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='signup'>\r\n\r\n            <div className='form-container'>\r\n\r\n                <div className='signup-container-header'>\r\n                    <h3>ELECTROPIA</h3>\r\n                </div>\r\n                <div className='signup-container-signup'>\r\n                    <h3>Create an Account</h3>\r\n                    {responseError && <h5>{ responseError }</h5>}\r\n                </div>\r\n\r\n                <form className='signup-form' onSubmit={handleFormSubmit}>\r\n                    <div className='signup-form-part'>\r\n                        <label htmlFor='name'>Name</label>\r\n                        <input className='signup-form-text-input' name='name' onChange={setFormDataImmutable} />\r\n                    </div>\r\n                    <div className='signup-form-part'>\r\n                        <label htmlFor='email'>Email</label>\r\n                        <input className='signup-form-text-input' name='email' onChange={setFormDataImmutable} />\r\n                    </div>\r\n\r\n                    <div className='signup-form-part'>\r\n                        <label htmlFor='password'>Password</label>\r\n                        <input className='signup-form-text-input' name='password' onChange={setFormDataImmutable} />\r\n                    </div>\r\n\r\n                    <div className='signup-form-part'>\r\n                        <button>Create Account</button>\r\n                    </div>\r\n\r\n                    <div className='signup-form-part'>\r\n                        <p>Do you have an account ? <br></br>Please click <Link to='/signin'>Sign In</Link>.</p>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { setCart } from '../../redux/actions/userAction';\r\nimport api from '../../Utils/api';\r\nimport './cartitem.css'\r\n\r\nfunction CartItem(props) {\r\n\r\n    function onRemoveButtonClicked(e) {\r\n        const clickedBtn = e.target;\r\n        clickedBtn.disabled = true;\r\n        const index = e.target.name;\r\n        api.delete(`/api/cart/${index}`).then(newCart => {\r\n            console.log('newCartFromCartItem', newCart.data);\r\n            props.dispatch(setCart(newCart.data))\r\n        }).catch(error => {\r\n\r\n        }).finally(() => {\r\n            clickedBtn.disabled = false;\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='cart-container-item'>\r\n            <img className='cart-container-item-image' src={props.image} alt='cant load image' />\r\n            <div className='cart-container-item-detail'>\r\n\r\n                <Link className='cart-container-item-title'>{props.title}</Link>\r\n                <button name={props.name} className='cart-container-button-remove-item' onClick={onRemoveButtonClicked}>Remove</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user }\r\n}\r\nexport default connect(mapStateToProps)(CartItem)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport CartItem from '../../Components/CartItem/CartItem';\r\nimport NavbarComponent from '../../Components/NavbarComponent/NavbarComponent'\r\nimport { setCatagory } from '../../redux/actions/catagoryActions';\r\nimport { setProduct } from '../../redux/actions/productActions';\r\nimport { setUser } from '../../redux/actions/userAction';\r\nimport api from '../../Utils/api';\r\nimport './cart.css'\r\n\r\nfunction Cart(props) {\r\n\r\n    async function getProductAndUpdate(){\r\n        try{\r\n            const productData = (await api.get('/api')).data\r\n            console.log('productData', productData);\r\n            console.log('getProductAndUpdate', productData);\r\n            props.dispatch(setUser(productData.user))\r\n            props.dispatch(setProduct(productData.products))\r\n            props.dispatch(setCatagory(productData.catagories))\r\n        }\r\n        catch (error){\r\n\r\n        }\r\n    }\r\n    function checkAndUpdateState(){\r\n        if (!props.user.cart){\r\n            // Check Online\r\n            getProductAndUpdate().then()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('Cart UseEffect', props.user);\r\n        checkAndUpdateState()\r\n        \r\n    }, [])\r\n\r\n    function getActiveView() {\r\n        if (props.user.cart) {\r\n            if (props.user.cart.length > 0) {\r\n                return (\r\n                    <div className='cart-container'>\r\n                        <h3 className='list-item-text'>List of items in your cart</h3>\r\n                        <div className='cart-container-list'>\r\n                            {props.user.cart.map((cartItem, i) => {\r\n                                console.log({cartItem});\r\n                                return <CartItem {...cartItem} key={`${cartItem._id}-${i}`} name={i} />\r\n\r\n                            })}\r\n                        </div>\r\n                                <button className='process-check-out'>Proccess Check Out</button>\r\n                            \r\n\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return <h4 className='cart-message'>No Items in the Cart</h4>\r\n            }\r\n        }\r\n        else {\r\n            return <h4 className='cart-message'>You should login to access the cart</h4>\r\n        }\r\n    }\r\n\r\n    console.log('cart_props_logs', props);\r\n    return (\r\n        <div className='cart'>\r\n            <NavbarComponent />\r\n            { getActiveView() }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { products: state.products, catagories: state.catagories, user: state.user }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cart)","import React from 'react'\r\nimport './about.css'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1>About the developer</h1>\r\n            <p>I am KALEAB SHUMET, I am a software developer, who developed various web applications, mobile games, mobile applications and desktop applications.</p>\r\n            <p>I develop web applications using ( React ) for frontend and ( Node JS, MySQL , MongoDb ) for the backend.</p>\r\n            <p>This site is as showcase that i built previously using MongoDb, Express, React, Node JS (MERN stack).</p>\r\n            <p>Also you can checkout other mobile apps and games that i built by the following link.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from './routes/Home/Home';\nimport ProductPage from './routes/ProductPage'\nimport './App.css'\nimport Signin from './routes/signin/signin';\nimport Signup from './routes/signup/signup';\nimport Cart from './routes/Cart/Cart';\nimport About from './routes/About/About';\n\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n      <>\n        <Switch>\n\n          <Route path=\"/product/:productId\" component={ProductPage} />\n\n          <Route path=\"/cart\" component={Cart} />\n\n          <Route path=\"/signin\" component={Signin} />\n\n          <Route path=\"/signup\" component={Signup} />\n\n          <Route path=\"/about\" component={About} />\n\n          <Route path=\"/\" component={Home} />\n\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const productReducer = (state='loading', action) => {\r\n    switch(action.type){\r\n        case 'SET_PRODUCT':\r\n            return action.newProduct;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducer;","const catagoryReducer = (state=[], action) => {\r\n    if(action.type === 'SET_CATAGORY')\r\n        return action.newCatagory;\r\n    return state;\r\n}\r\n\r\nexport default catagoryReducer;","const userReducer = (state = {}, action) => {\r\n    if (action.type === 'SET_USER')\r\n        return action.newUser;\r\n    else if (action.type === 'SET_CART') {\r\n        if (state.cart) {\r\n            const cart = [...action.newCart];\r\n            return {\r\n                ...state,\r\n                cart\r\n            }\r\n        }\r\n        else return state\r\n    }\r\n    else return state;\r\n}\r\n\r\nexport default userReducer;","import productReducer from '../reducers/ProductsReducer'\r\nimport catagoryReducer from '../reducers/CatagoryReducer'\r\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger'\r\nimport userReducer from '../reducers/UserReducer';\r\n\r\n\r\nconst combinedReducers = combineReducers(\r\n    {\r\n        products: productReducer,\r\n        catagories: catagoryReducer,\r\n        user: userReducer\r\n    }\r\n)\r\nconst store = createStore(combinedReducers, composeWithDevTools(applyMiddleware(logger)));\r\n\r\nconsole.log('subscribe', store.getState());\r\nstore.subscribe(() => {\r\n    console.log('subscribe', store.getState());\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './redux/store/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}